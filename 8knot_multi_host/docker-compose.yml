# Auto-generated docker-compose.yml
version: '3.8'

services:

  redis-cache-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      - knot1

  redis-users-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      - knot1

  augur_multi_host_1-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur1/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot1

  instance1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8081:5000"
    env_file:
      - envs/instance1.env
    depends_on:
      - augur_multi_host_1-db_1
      - redis-cache-1
      - redis-users-1
    restart: unless-stopped
    networks:
      - knot1

  redis-cache-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      - knot2

  redis-users-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      - knot2

  augur_multi_host_2-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur2_db_data:/var/lib/postgresql/data
      - ./postgres/augur2/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur2/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot2

  instance2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8082:5000"
    env_file:
      - envs/instance2.env
    depends_on:
      - augur_multi_host_2-db_1
      - redis-cache-2
      - redis-users-2
    restart: unless-stopped
    networks:
      - knot2

  redis-cache-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      - knot3

  redis-users-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      - knot3

  augur_multi_host_3-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur3_db_data:/var/lib/postgresql/data
      - ./postgres/augur3/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur3/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot3

  instance3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8083:5000"
    env_file:
      - envs/instance3.env
    depends_on:
      - augur_multi_host_3-db_1
      - redis-cache-3
      - redis-users-3
    restart: unless-stopped
    networks:
      - knot3

  redis-cache-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      - knot4

  redis-users-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      - knot4

  augur_multi_host_4-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur4_db_data:/var/lib/postgresql/data
      - ./postgres/augur4/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur4/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot4

  instance4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8084:5000"
    env_file:
      - envs/instance4.env
    depends_on:
      - augur_multi_host_4-db_1
      - redis-cache-4
      - redis-users-4
    restart: unless-stopped
    networks:
      - knot4

  redis-cache-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      - knot5

  redis-users-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      - knot5

  augur_multi_host_5-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur5_db_data:/var/lib/postgresql/data
      - ./postgres/augur5/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur5/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot5

  instance5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8085:5000"
    env_file:
      - envs/instance5.env
    depends_on:
      - augur_multi_host_5-db_1
      - redis-cache-5
      - redis-users-5
    restart: unless-stopped
    networks:
      - knot5

  redis-cache-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      - knot6

  redis-users-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      - knot6

  augur_multi_host_6-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur6_db_data:/var/lib/postgresql/data
      - ./postgres/augur6/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur6/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot6

  instance6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8086:5000"
    env_file:
      - envs/instance6.env
    depends_on:
      - augur_multi_host_6-db_1
      - redis-cache-6
      - redis-users-6
    restart: unless-stopped
    networks:
      - knot6

  redis-cache-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      - knot7

  redis-users-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      - knot7

  augur_multi_host_7-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur7_db_data:/var/lib/postgresql/data
      - ./postgres/augur7/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur7/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot7

  instance7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8087:5000"
    env_file:
      - envs/instance7.env
    depends_on:
      - augur_multi_host_7-db_1
      - redis-cache-7
      - redis-users-7
    restart: unless-stopped
    networks:
      - knot7

  redis-cache-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      - knot8

  redis-users-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      - knot8

  augur_multi_host_8-db_1:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=augur
      - POSTGRES_USER=augur
      - POSTGRES_PASSWORD=augur
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur8_db_data:/var/lib/postgresql/data
      - ./postgres/augur8/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur8/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - knot8

  instance8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8088:5000"
    env_file:
      - envs/instance8.env
    depends_on:
      - augur_multi_host_8-db_1
      - redis-cache-8
      - redis-users-8
    restart: unless-stopped
    networks:
      - knot8


volumes:
  augur1_db_data:
  augur2_db_data:
  augur3_db_data:
  augur4_db_data:
  augur5_db_data:
  augur6_db_data:
  augur7_db_data:
  augur8_db_data:

networks:
  knot1:
  knot2:
  knot3:
  knot4:
  knot5:
  knot6:
  knot7:
  knot8:
