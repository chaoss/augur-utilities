# Auto-generated 8Knot multi-instance docker-compose

services:

  db-init-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-1:
        condition: service_healthy
    env_file:
      - ./envs/instance1.env
    restart: on-failure:1000


  app-server-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8091:8080"
    depends_on:
      - db-init-1
      - redis-users-1
      - redis-cache-1
    env_file:
      - ./envs/instance1.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-1
      - redis-users-1
      - postgres-cache-1
    env_file:
      - ./envs/instance1.env
    restart: always


  worker-query-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-1
      - postgres-cache-1
    env_file:
      - ./envs/instance1.env
    restart: always


  redis-cache-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance1.env
    restart: always


  redis-users-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance1.env
    restart: always


  postgres-cache-1:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5451:5432"
    env_file:
      - ./envs/instance1.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-2:
        condition: service_healthy
    env_file:
      - ./envs/instance2.env
    restart: on-failure:1000


  app-server-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8092:8080"
    depends_on:
      - db-init-2
      - redis-users-2
      - redis-cache-2
    env_file:
      - ./envs/instance2.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-2
      - redis-users-2
      - postgres-cache-2
    env_file:
      - ./envs/instance2.env
    restart: always


  worker-query-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-2
      - postgres-cache-2
    env_file:
      - ./envs/instance2.env
    restart: always


  redis-cache-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance2.env
    restart: always


  redis-users-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance2.env
    restart: always


  postgres-cache-2:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5452:5432"
    env_file:
      - ./envs/instance2.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-3:
        condition: service_healthy
    env_file:
      - ./envs/instance3.env
    restart: on-failure:1000


  app-server-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8093:8080"
    depends_on:
      - db-init-3
      - redis-users-3
      - redis-cache-3
    env_file:
      - ./envs/instance3.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-3
      - redis-users-3
      - postgres-cache-3
    env_file:
      - ./envs/instance3.env
    restart: always


  worker-query-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-3
      - postgres-cache-3
    env_file:
      - ./envs/instance3.env
    restart: always


  redis-cache-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance3.env
    restart: always


  redis-users-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance3.env
    restart: always


  postgres-cache-3:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5453:5432"
    env_file:
      - ./envs/instance3.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-4:
        condition: service_healthy
    env_file:
      - ./envs/instance4.env
    restart: on-failure:1000


  app-server-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8094:8080"
    depends_on:
      - db-init-4
      - redis-users-4
      - redis-cache-4
    env_file:
      - ./envs/instance4.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-4
      - redis-users-4
      - postgres-cache-4
    env_file:
      - ./envs/instance4.env
    restart: always


  worker-query-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-4
      - postgres-cache-4
    env_file:
      - ./envs/instance4.env
    restart: always


  redis-cache-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance4.env
    restart: always


  redis-users-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance4.env
    restart: always


  postgres-cache-4:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5454:5432"
    env_file:
      - ./envs/instance4.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-5:
        condition: service_healthy
    env_file:
      - ./envs/instance5.env
    restart: on-failure:1000


  app-server-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8095:8080"
    depends_on:
      - db-init-5
      - redis-users-5
      - redis-cache-5
    env_file:
      - ./envs/instance5.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-5
      - redis-users-5
      - postgres-cache-5
    env_file:
      - ./envs/instance5.env
    restart: always


  worker-query-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-5
      - postgres-cache-5
    env_file:
      - ./envs/instance5.env
    restart: always


  redis-cache-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance5.env
    restart: always


  redis-users-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance5.env
    restart: always


  postgres-cache-5:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5455:5432"
    env_file:
      - ./envs/instance5.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-6:
        condition: service_healthy
    env_file:
      - ./envs/instance6.env
    restart: on-failure:1000


  app-server-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8096:8080"
    depends_on:
      - db-init-6
      - redis-users-6
      - redis-cache-6
    env_file:
      - ./envs/instance6.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-6
      - redis-users-6
      - postgres-cache-6
    env_file:
      - ./envs/instance6.env
    restart: always


  worker-query-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-6
      - postgres-cache-6
    env_file:
      - ./envs/instance6.env
    restart: always


  redis-cache-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance6.env
    restart: always


  redis-users-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance6.env
    restart: always


  postgres-cache-6:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5456:5432"
    env_file:
      - ./envs/instance6.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-7:
        condition: service_healthy
    env_file:
      - ./envs/instance7.env
    restart: on-failure:1000


  app-server-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8097:8080"
    depends_on:
      - db-init-7
      - redis-users-7
      - redis-cache-7
    env_file:
      - ./envs/instance7.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-7
      - redis-users-7
      - postgres-cache-7
    env_file:
      - ./envs/instance7.env
    restart: always


  worker-query-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-7
      - postgres-cache-7
    env_file:
      - ./envs/instance7.env
    restart: always


  redis-cache-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance7.env
    restart: always


  redis-users-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance7.env
    restart: always


  postgres-cache-7:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5457:5432"
    env_file:
      - ./envs/instance7.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  db-init-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache-8:
        condition: service_healthy
    env_file:
      - ./envs/instance8.env
    restart: on-failure:1000


  app-server-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "gunicorn",
        "--bind",
        ":8080",
        "app:server",
        "--workers",
        "8",
        "--threads",
        "16",
        "--timeout",
        "300",
        "--keep-alive",
        "120"
      ]
    ports:
      - "8098:8080"
    depends_on:
      - db-init-8
      - redis-users-8
      - redis-cache-8
    env_file:
      - ./envs/instance8.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always


  worker-callback-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "--concurrency=1",
        "--time-limit=300",
        "--soft-time-limit=240"
      ]
    depends_on:
      - redis-cache-8
      - redis-users-8
      - postgres-cache-8
    env_file:
      - ./envs/instance8.env
    restart: always


  worker-query-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache-8
      - postgres-cache-8
    env_file:
      - ./envs/instance8.env
    restart: always


  redis-cache-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance8.env
    restart: always


  redis-users-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - ./envs/instance8.env
    restart: always


  postgres-cache-8:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5458:5432"
    env_file:
      - ./envs/instance8.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  knot1:
  knot2:
  knot3:
  knot4:
  knot5:
  knot6:
  knot7:
  knot8: