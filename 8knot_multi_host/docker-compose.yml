# Auto-generated docker-compose.yml
version: '3.8'

services:

  redis-cache-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      knot1:
        aliases:
          - redis-cache

  redis-users-1:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      knot1:
        aliases:
          - redis-users

  postgres-cache-1:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur1/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot1:
        aliases:
          - postgres-cache

  db-init-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-1:
        condition: service_healthy
    env_file:
      - envs/instance1.env
    restart: on-failure:1000
    networks:
      - knot1

  worker-callback-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-1
      - redis-cache-1
      - redis-users-1
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      - knot1

  worker-query-1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-1
      - redis-cache-1
    env_file:
      - envs/instance1.env
    restart: always
    networks:
      - knot1

  instance1:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8081:8080"
    env_file:
      - envs/instance1.env
    depends_on:
      db-init-1:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot1

  redis-cache-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      knot2:
        aliases:
          - redis-cache

  redis-users-2:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      knot2:
        aliases:
          - redis-users

  postgres-cache-2:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur2_db_data:/var/lib/postgresql/data
      - ./postgres/augur2/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur2/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot2:
        aliases:
          - postgres-cache

  db-init-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-2:
        condition: service_healthy
    env_file:
      - envs/instance2.env
    restart: on-failure:1000
    networks:
      - knot2

  worker-callback-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-2
      - redis-cache-2
      - redis-users-2
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      - knot2

  worker-query-2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-2
      - redis-cache-2
    env_file:
      - envs/instance2.env
    restart: always
    networks:
      - knot2

  instance2:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8082:8080"
    env_file:
      - envs/instance2.env
    depends_on:
      db-init-2:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot2

  redis-cache-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      knot3:
        aliases:
          - redis-cache

  redis-users-3:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      knot3:
        aliases:
          - redis-users

  postgres-cache-3:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur3_db_data:/var/lib/postgresql/data
      - ./postgres/augur3/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur3/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot3:
        aliases:
          - postgres-cache

  db-init-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-3:
        condition: service_healthy
    env_file:
      - envs/instance3.env
    restart: on-failure:1000
    networks:
      - knot3

  worker-callback-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-3
      - redis-cache-3
      - redis-users-3
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      - knot3

  worker-query-3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-3
      - redis-cache-3
    env_file:
      - envs/instance3.env
    restart: always
    networks:
      - knot3

  instance3:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8083:8080"
    env_file:
      - envs/instance3.env
    depends_on:
      db-init-3:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot3

  redis-cache-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      knot4:
        aliases:
          - redis-cache

  redis-users-4:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      knot4:
        aliases:
          - redis-users

  postgres-cache-4:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur4_db_data:/var/lib/postgresql/data
      - ./postgres/augur4/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur4/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot4:
        aliases:
          - postgres-cache

  db-init-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-4:
        condition: service_healthy
    env_file:
      - envs/instance4.env
    restart: on-failure:1000
    networks:
      - knot4

  worker-callback-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-4
      - redis-cache-4
      - redis-users-4
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      - knot4

  worker-query-4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-4
      - redis-cache-4
    env_file:
      - envs/instance4.env
    restart: always
    networks:
      - knot4

  instance4:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8084:8080"
    env_file:
      - envs/instance4.env
    depends_on:
      db-init-4:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot4

  redis-cache-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      knot5:
        aliases:
          - redis-cache

  redis-users-5:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      knot5:
        aliases:
          - redis-users

  postgres-cache-5:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur5_db_data:/var/lib/postgresql/data
      - ./postgres/augur5/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur5/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot5:
        aliases:
          - postgres-cache

  db-init-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-5:
        condition: service_healthy
    env_file:
      - envs/instance5.env
    restart: on-failure:1000
    networks:
      - knot5

  worker-callback-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-5
      - redis-cache-5
      - redis-users-5
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      - knot5

  worker-query-5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-5
      - redis-cache-5
    env_file:
      - envs/instance5.env
    restart: always
    networks:
      - knot5

  instance5:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8085:8080"
    env_file:
      - envs/instance5.env
    depends_on:
      db-init-5:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot5

  redis-cache-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      knot6:
        aliases:
          - redis-cache

  redis-users-6:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      knot6:
        aliases:
          - redis-users

  postgres-cache-6:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur6_db_data:/var/lib/postgresql/data
      - ./postgres/augur6/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur6/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot6:
        aliases:
          - postgres-cache

  db-init-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-6:
        condition: service_healthy
    env_file:
      - envs/instance6.env
    restart: on-failure:1000
    networks:
      - knot6

  worker-callback-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-6
      - redis-cache-6
      - redis-users-6
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      - knot6

  worker-query-6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-6
      - redis-cache-6
    env_file:
      - envs/instance6.env
    restart: always
    networks:
      - knot6

  instance6:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8086:8080"
    env_file:
      - envs/instance6.env
    depends_on:
      db-init-6:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot6

  redis-cache-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      knot7:
        aliases:
          - redis-cache

  redis-users-7:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      knot7:
        aliases:
          - redis-users

  postgres-cache-7:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur7_db_data:/var/lib/postgresql/data
      - ./postgres/augur7/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur7/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot7:
        aliases:
          - postgres-cache

  db-init-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-7:
        condition: service_healthy
    env_file:
      - envs/instance7.env
    restart: on-failure:1000
    networks:
      - knot7

  worker-callback-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-7
      - redis-cache-7
      - redis-users-7
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      - knot7

  worker-query-7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-7
      - redis-cache-7
    env_file:
      - envs/instance7.env
    restart: always
    networks:
      - knot7

  instance7:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8087:8080"
    env_file:
      - envs/instance7.env
    depends_on:
      db-init-7:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot7

  redis-cache-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      knot8:
        aliases:
          - redis-cache

  redis-users-8:
    image: docker.io/library/redis:6
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      knot8:
        aliases:
          - redis-users

  postgres-cache-8:
    image: docker.io/library/postgres:17
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur8_db_data:/var/lib/postgresql/data
      - ./postgres/augur8/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/augur8/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U augur"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      knot8:
        aliases:
          - postgres-cache

  db-init-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - python3
      - ./cache_manager/db_init.py
    depends_on:
      postgres-cache-8:
        condition: service_healthy
    env_file:
      - envs/instance8.env
    restart: on-failure:1000
    networks:
      - knot8

  worker-callback-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - --concurrency=1
      - --time-limit=300
      - --soft-time-limit=240
    depends_on:
      - postgres-cache-8
      - redis-cache-8
      - redis-users-8
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      - knot8

  worker-query-8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    command:
      - celery
      - -A
      - app:celery_app
      - worker
      - --loglevel=INFO
      - -Q
      - data
      - --concurrency=1
      - --time-limit=600
      - --soft-time-limit=540
    depends_on:
      - postgres-cache-8
      - redis-cache-8
    env_file:
      - envs/instance8.env
    restart: always
    networks:
      - knot8

  instance8:
    build:
      context: /home/sean/github/8knot
      dockerfile: docker/Dockerfile
    ports:
      - "8088:8080"
    env_file:
      - envs/instance8.env
    depends_on:
      db-init-8:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - knot8


volumes:
  augur1_db_data:
  augur2_db_data:
  augur3_db_data:
  augur4_db_data:
  augur5_db_data:
  augur6_db_data:
  augur7_db_data:
  augur8_db_data:

networks:
  knot1:
  knot2:
  knot3:
  knot4:
  knot5:
  knot6:
  knot7:
  knot8:
