version: '3.8'

services:

  db-init_1:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_1:
        condition: service_healthy
    env_file:
      - instance1.env
    restart: on-failure:1000

  reverse-proxy_1:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_1.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_1
    ports:
      - "8091:8091"

  app-server_1:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8091",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_1
      - worker-query_1
      - redis-cache_1
      - redis-users_1
      - postgres-cache_1
      - db-init_1
    env_file:
      - instance1.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_1:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_1
      - redis-users_1
      - postgres-cache_1
    env_file:
      - instance1.env
    restart: always

  worker-query_1:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_1
      - postgres-cache_1
    env_file:
      - instance1.env
    restart: always

  redis-cache_1:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass1
    env_file:
      - instance1.env
    restart: always

  redis-users_1:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass2
    env_file:
      - instance1.env
    restart: always

  postgres-cache_1:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance1.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_2:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_2:
        condition: service_healthy
    env_file:
      - instance2.env
    restart: on-failure:1000

  reverse-proxy_2:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_2.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_2
    ports:
      - "8092:8092"

  app-server_2:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8092",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_2
      - worker-query_2
      - redis-cache_2
      - redis-users_2
      - postgres-cache_2
      - db-init_2
    env_file:
      - instance2.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_2:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_2
      - redis-users_2
      - postgres-cache_2
    env_file:
      - instance2.env
    restart: always

  worker-query_2:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_2
      - postgres-cache_2
    env_file:
      - instance2.env
    restart: always

  redis-cache_2:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass2
    env_file:
      - instance2.env
    restart: always

  redis-users_2:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass3
    env_file:
      - instance2.env
    restart: always

  postgres-cache_2:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance2.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_3:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_3:
        condition: service_healthy
    env_file:
      - instance3.env
    restart: on-failure:1000

  reverse-proxy_3:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_3.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_3
    ports:
      - "8093:8093"

  app-server_3:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8093",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_3
      - worker-query_3
      - redis-cache_3
      - redis-users_3
      - postgres-cache_3
      - db-init_3
    env_file:
      - instance3.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_3:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_3
      - redis-users_3
      - postgres-cache_3
    env_file:
      - instance3.env
    restart: always

  worker-query_3:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_3
      - postgres-cache_3
    env_file:
      - instance3.env
    restart: always

  redis-cache_3:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass3
    env_file:
      - instance3.env
    restart: always

  redis-users_3:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass4
    env_file:
      - instance3.env
    restart: always

  postgres-cache_3:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance3.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_4:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_4:
        condition: service_healthy
    env_file:
      - instance4.env
    restart: on-failure:1000

  reverse-proxy_4:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_4.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_4
    ports:
      - "8094:8094"

  app-server_4:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8094",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_4
      - worker-query_4
      - redis-cache_4
      - redis-users_4
      - postgres-cache_4
      - db-init_4
    env_file:
      - instance4.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_4:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_4
      - redis-users_4
      - postgres-cache_4
    env_file:
      - instance4.env
    restart: always

  worker-query_4:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_4
      - postgres-cache_4
    env_file:
      - instance4.env
    restart: always

  redis-cache_4:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass4
    env_file:
      - instance4.env
    restart: always

  redis-users_4:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass5
    env_file:
      - instance4.env
    restart: always

  postgres-cache_4:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance4.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_5:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_5:
        condition: service_healthy
    env_file:
      - instance5.env
    restart: on-failure:1000

  reverse-proxy_5:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_5.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_5
    ports:
      - "8095:8095"

  app-server_5:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8095",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_5
      - worker-query_5
      - redis-cache_5
      - redis-users_5
      - postgres-cache_5
      - db-init_5
    env_file:
      - instance5.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_5:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_5
      - redis-users_5
      - postgres-cache_5
    env_file:
      - instance5.env
    restart: always

  worker-query_5:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_5
      - postgres-cache_5
    env_file:
      - instance5.env
    restart: always

  redis-cache_5:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass5
    env_file:
      - instance5.env
    restart: always

  redis-users_5:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass6
    env_file:
      - instance5.env
    restart: always

  postgres-cache_5:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance5.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_6:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_6:
        condition: service_healthy
    env_file:
      - instance6.env
    restart: on-failure:1000

  reverse-proxy_6:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_6.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_6
    ports:
      - "8096:8096"

  app-server_6:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8096",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_6
      - worker-query_6
      - redis-cache_6
      - redis-users_6
      - postgres-cache_6
      - db-init_6
    env_file:
      - instance6.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_6:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_6
      - redis-users_6
      - postgres-cache_6
    env_file:
      - instance6.env
    restart: always

  worker-query_6:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_6
      - postgres-cache_6
    env_file:
      - instance6.env
    restart: always

  redis-cache_6:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass6
    env_file:
      - instance6.env
    restart: always

  redis-users_6:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass7
    env_file:
      - instance6.env
    restart: always

  postgres-cache_6:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance6.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_7:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_7:
        condition: service_healthy
    env_file:
      - instance7.env
    restart: on-failure:1000

  reverse-proxy_7:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_7.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_7
    ports:
      - "8097:8097"

  app-server_7:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8097",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_7
      - worker-query_7
      - redis-cache_7
      - redis-users_7
      - postgres-cache_7
      - db-init_7
    env_file:
      - instance7.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_7:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_7
      - redis-users_7
      - postgres-cache_7
    env_file:
      - instance7.env
    restart: always

  worker-query_7:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_7
      - postgres-cache_7
    env_file:
      - instance7.env
    restart: always

  redis-cache_7:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass7
    env_file:
      - instance7.env
    restart: always

  redis-users_7:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass8
    env_file:
      - instance7.env
    restart: always

  postgres-cache_7:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance7.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init_8:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["python3", "./cache_manager/db_init.py"]
    depends_on:
      postgres-cache_8:
        condition: service_healthy
    env_file:
      - instance8.env
    restart: on-failure:1000

  reverse-proxy_8:
    image: docker.io/library/nginx:latest
    volumes:
      - ./nginx_8.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server_8
    ports:
      - "8098:8098"

  app-server_8:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "gunicorn",
        "--reload",
        "--bind",
        ":8098",
        "app:server",
        "--workers",
        "1",
        "--threads",
        "2",
        "--timeout",
        "300",
        "--keep-alive",
        "5"
      ]
    depends_on:
      - worker-callback_8
      - worker-query_8
      - redis-cache_8
      - redis-users_8
      - postgres-cache_8
      - db-init_8
    env_file:
      - instance8.env
    environment:
      - EIGHTKNOT_SEARCHBAR_OPTS_SORT=shortest
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_RESULTS=5500
      - EIGHTKNOT_SEARCHBAR_OPTS_MAX_REPOS=5000
    restart: always

  worker-callback_8:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command: ["celery", "-A", "app:celery_app", "worker", "--loglevel=INFO", "--concurrency=1", "--time-limit=300", "--soft-time-limit=240"]
    depends_on:
      - redis-cache_8
      - redis-users_8
      - postgres-cache_8
    env_file:
      - instance8.env
    restart: always

  worker-query_8:
    build:
      context: /home/sean/github/8knot
      dockerfile: ./docker/Dockerfile
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=INFO",
        "-Q",
        "data",
        "--concurrency=1",
        "--time-limit=600",
        "--soft-time-limit=540"
      ]
    depends_on:
      - redis-cache_8
      - postgres-cache_8
    env_file:
      - instance8.env
    restart: always

  redis-cache_8:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass8
    env_file:
      - instance8.env
    restart: always

  redis-users_8:
    image: docker.io/library/redis:6
    command:
      - redis-server
      - --requirepass
      - redispass9
    env_file:
      - instance8.env
    restart: always

  postgres-cache_8:
    image: docker.io/library/postgres:16
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - augur1_db_data:/var/lib/postgresql/data
      - ./postgres/augur1/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - instance8.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-cache_1:
  postgres-cache_2:
  postgres-cache_3:
  postgres-cache_4:
  postgres-cache_5:
  postgres-cache_6:
  postgres-cache_7:
  postgres-cache_8: